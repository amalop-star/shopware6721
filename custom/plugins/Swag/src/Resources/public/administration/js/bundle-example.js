!function(){var e={497:function(){let{Component:e}=Shopware;e.override("sw-product-detail",{computed:{productCriteria(){let e=this.$super("productCriteria");return e.addAssociation("bundles"),e}}})},809:function(){let{Component:e,Context:t}=Shopware;e.extend("swag-bundle-create","swag-bundle-detail",{data(){return{productRepository:null,products:[]}},created(){this.initCreate()},methods:{getBundle(){},initCreate(){this.bundle=this.repository.create(t.api),this.bundle.products=[],this.productRepository=this.repositoryFactory.create("product"),this.loadProducts()},loadProducts(){let e=new Shopware.Data.Criteria(0,50);this.productRepository.search(e,t.api).then(e=>{this.products=e})},onClickSave(){this.isLoading=!0,this.repository.save(this.bundle,t.api).then(()=>{this.isLoading=!1,this.$router.push({name:"swag.bundle.detail",params:{id:this.bundle.id}})}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$t("swag-bundle.detail.errorTitle"),message:e})})}}})}},t={};function n(s){var a=t[s];if(void 0!==a)return a.exports;var i=t[s]={exports:{}};return e[s](i,i.exports,n),i.exports}n.p="bundles/bundleexample/",window?.__sw__?.assetPath&&(n.p=window.__sw__.assetPath+"/bundles/bundleexample/"),function(){"use strict";let{Component:e}=Shopware,{Criteria:t}=Shopware.Data;e.register("swag-bundle-list",{template:'{% block swag_bundle_list %}\n<sw-page class="swag-bundle-list">\n\n    \n    <template #smart-bar-actions>\n        <sw-button\n            class="sw-customer-list__button-create"\n            variant="primary"\n            :router-link="{ name: \'swag.bundle.create\' }"\n        >\n            {{ $t(\'swag-bundle.list.addButtonText\') }}\n        </sw-button>\n    </template>\n\n    \n    <template #content>\n        <sw-entity-listing\n            v-if="bundles"\n            :items="bundles"\n            :repository="repository"\n            :show-selection="false"\n            :columns="columns"\n            detail-route="swag.bundle.detail">\n        </sw-entity-listing>\n    </template>\n\n</sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],data(){return{repository:null,bundles:null}},metaInfo(){return{title:this.$createTitle()}},computed:{columns(){return[{property:"name",dataIndex:"name",label:this.$t("swag-bundle.list.columnName"),routerLink:"swag.bundle.detail",inlineEdit:"string",allowResize:!0,primary:!0},{property:"discount",dataIndex:"discount",label:this.$t("swag-bundle.list.columnDiscount"),inlineEdit:"number",allowResize:!0},{property:"discountType",dataIndex:"discountType",label:this.$t("swag-bundle.list.columnDiscountType"),allowResize:!0}]}},created(){this.repository=this.repositoryFactory.create("swag_bundle"),this.repository.search(new t,Shopware.Context.api).then(e=>{this.bundles=e})}});let{Component:s,Mixin:a}=Shopware;s.register("swag-bundle-detail",{template:'{% block swag_bundle_detail %}\n<sw-page class="swag-bundle-detail">\n\n    \n    <template #smart-bar-actions>\n        <sw-button :router-link="{ name: \'swag.bundle.list\' }">\n            {{ $t(\'swag-bundle.detail.cancelButtonText\') }}\n        </sw-button>\n\n        <sw-button-process\n            :is-loading="isLoading"\n            :process-success="processSuccess"\n            variant="primary"\n            @process-finish="saveFinish"\n            @click="onClickSave">\n            {{ $t(\'swag-bundle.detail.saveButtonText\') }}\n        </sw-button-process>\n    </template>\n\n    \n    <template #content>\n        <sw-card-view>\n            <sw-card v-if="bundle" :is-loading="isLoading">\n\n                \n                <sw-text-field\n                    :label="$t(\'swag-bundle.detail.nameLabel\')"\n                    v-model:value="bundle.name">\n                </sw-text-field>\n\n                \n                <sw-number-field\n                    :label="$t(\'swag-bundle.detail.discountLabel\')"\n                    v-model="bundle.discount">\n                </sw-number-field>\n\n                \n                <sw-radio-field\n                    :label="$t(\'swag-bundle.detail.discountTypeLabel\')"\n                    v-model="bundle.discountType"\n                    :options="options">\n                </sw-radio-field>\n\n                \n               {# <sw-multi-select\n                    :label="$t(\'swag-bundle.detail.assignProductsLabel\')"\n                    v-model="selectedProductIds"\n                    :options="productOptions"\n                    :disabled="isLoading">\n                </sw-multi-select> #}\n<sw-multi-select\n    v-model:value="selectedProductIds"\n    v-bind="$attrs"\n    :options="productOptions"\n    :disabled="isLoading"\n    placeholder="Select products"\n    value-property="id"\n    label-property="name"\n>\n            </sw-card>\n        </sw-card-view>\n    </template>\n\n</sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[a.getByName("notification")],metaInfo(){return{title:this.$createTitle()}},data(){return{bundle:null,isLoading:!1,processSuccess:!1,repository:null,productRepository:null,products:[],selectedProductIds:[]}},computed:{options(){return[{value:"absolute",name:this.$t("swag-bundle.detail.absoluteText")},{value:"percentage",name:this.$t("swag-bundle.detail.percentageText")}]},productOptions(){return this.products.map(e=>({value:e.id,label:e.name}))}},created(){this.repository=this.repositoryFactory.create("swag_bundle"),this.productRepository=this.repositoryFactory.create("product"),this.getBundle(),this.loadProducts()},methods:{getBundle(){this.repository.get(this.$route.params.id,Shopware.Context.api).then(e=>{this.bundle=e,e.products&&(this.selectedProductIds=e.products.map(e=>e.id))})},loadProducts(){let e=new Shopware.Data.Criteria(0,50);this.productRepository.search(e,Shopware.Context.api).then(e=>{this.products=e})},onClickSave(){this.isLoading=!0,this.bundle.products=this.selectedProductIds.map(e=>({id:e})),this.repository.save(this.bundle,Shopware.Context.api).then(()=>{this.getBundle(),this.isLoading=!1,this.processSuccess=!0}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$t("swag-bundle.detail.errorTitle"),message:e})})},saveFinish(){this.processSuccess=!1}}}),n(809);var i=JSON.parse('{"swag-bundle":{"general":{"mainMenuItemGeneral":"Bundles","descriptionTextModule":"Verwalte die Bundles hier"},"list":{"addButtonText":"Bundle hinzuf\xfcgen","columnName":"Name","columnDiscountType":"Rabatt Typ","columnDiscount":"Rabatt"},"detail":{"nameLabel":"Name","discountLabel":"Rabatt","discountTypeLabel":"Rabatt Typ","assignProductsLabel":"Produkte zuweisen","cancelButtonText":"Abbrechen","saveButtonText":"Speichern","errorTitle":"Fehler beim Speichern des Bundles","absoluteText":"Absolut","percentageText":"Prozentual"}},"sw-product":{"detail":{"bundleCardLabel":"Bundles","bundleSelectLabel":"Zugewiesene Bundles","bundleSelectPlaceholder":"Bundle hinzuf\xfcgen..."}},"sw-condition":{"condition":{"cartContainsBundle":{"label":"Warenkorb enth\xe4lt Bundle"}}}}'),o=JSON.parse('{"swag-bundle":{"general":{"mainMenuItemGeneral":"Bundles","descriptionTextModule":"Manage bundles here"},"list":{"addButtonText":"Add bundle","columnName":"Name","columnDiscountType":"Discount type","columnDiscount":"Discount"},"detail":{"nameLabel":"Name","discountLabel":"Discount","discountTypeLabel":"Discount type","assignProductsLabel":"Assign products","cancelButtonText":"Cancel","saveButtonText":"Save","errorTitle":"Error saving the bundle","absoluteText":"Absolute","percentageText":"Percentage"},"create":{"saveButton":"Save Bundle","nameLabel":"Name","discountLabel":"Discount","discountTypeLabel":"Discount Type","assignProductsLabel":"Assign Products","successTitle":"Bundle saved successfully","successMessage":"The bundle has been created.","errorTitle":"Failed to save bundle"}},"sw-product":{"detail":{"bundleCardLabel":"Bundles","bundleSelectLabel":"Associated bundles","bundleSelectPlaceholder":"Add bundle..."}},"sw-condition":{"condition":{"cartContainsBundle":{"label":"Cart contains bundle"}}}}');let{Module:l}=Shopware;l.register("swag-bundle",{type:"plugin",name:"Bundle",title:"swag-bundle.general.mainMenuItemGeneral",description:"sw-property.general.descriptionTextModule",color:"#FFD700",icon:"default-shopping-paper-bag-product",snippets:{"de-DE":i,"en-GB":o},routes:{list:{component:"swag-bundle-list",path:"list"},detail:{component:"swag-bundle-detail",path:"detail/:id",meta:{parentPath:"swag.bundle.list"}},create:{component:"swag-bundle-create",path:"create",meta:{parentPath:"swag.bundle.list"}}},navigation:[{id:"swag-bundle-example",path:"swag.bundle.list",parent:"sw-marketing",label:"Bundles",icon:"default-shopping-paper-bag-product",position:100}]});let{Component:r}=Shopware;r.override("sw-product-detail-base",{template:'{% block sw_product_detail_attribute_sets %}\n    {% parent() %}\n    <sw-card :title="$t(\'sw-product.detail.bundleCardLabel\')"\n             :isLoading="isLoading">\n        <sw-inherit-wrapper v-if="!isLoading"\n                            v-model="product.extensions.bundles"\n                            :inheritedValue="parentProduct.extensions ? parentProduct.extensions.bundles : null"\n                            :hasParent="!!parentProduct.id"\n                            :label="$t(\'sw-product.detail.bundleSelectLabel\')"\n                            isAssociation\n                            @inheritance-remove="saveProduct"\n                            @inheritance-restore="saveProduct">\n            <template #content="{ currentValue, isInherited, updateCurrentValue }">\n                <sw-entity-many-to-many-select\n                    :localMode="product.isNew()"\n                    :entityCollection="currentValue"\n                    @input="updateCurrentValue"\n                    labelProperty="name"\n                    :disabled="isInherited"\n                    :key="isInherited"\n                    :placeholder="$t(\'sw-product.detail.bundleSelectPlaceholder\')">\n                </sw-entity-many-to-many-select>\n            </template>\n        </sw-inherit-wrapper>\n    </sw-card>\n{% endblock %}\n',computed:{productRepository(){return this.repositoryFactory.create("product")}},methods:{saveProduct(){this.product&&this.productRepository.save(this.product,Shopware.Context.api)}}}),n(497);let{Component:d}=Shopware;d.extend("swag-cart-contains-bundle","sw-condition-base",{template:'{% block sw_condition_base_fields %}\n    <sw-field type="text" class="field--main" size="medium" :disabled="true">\n    </sw-field>\n{% endblock %}\n'});let{Application:u}=Shopware;u.addServiceProviderDecorator("ruleConditionDataProviderService",e=>(e.addCondition("swagBundleContainsBundle",{component:"swag-cart-contains-bundle",label:"sw-condition.condition.cartContainsBundle.label",scopes:["cart"]}),e))}()}();