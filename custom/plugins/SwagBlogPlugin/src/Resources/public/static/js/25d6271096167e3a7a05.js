(window["webpackJsonpPluginswag-blog-plugin"]=window["webpackJsonpPluginswag-blog-plugin"]||[]).push([[955],{266:function(){},955:function(e,a,o){"use strict";o.r(a),o.d(a,{default:function(){return s}}),o(533);let{Mixin:i,Data:{Criteria:l},Context:t}=Shopware,{mapPropertyErrors:d}=Shopware.Component.getComponentHelper();var s={template:'{% block swag_blog_detail %}\n<sw-page class="swag-blog-detail">\n\n	<template #smart-bar-header>\n		<h2 v-if="blog && blog.title">\n			{{ blog.title }}\n		</h2>\n		<h2 v-else>\n			{{ $tc(\'swag-blog.detail.titleNew\') }}\n		</h2>\n	</template>\n\n	<template #smart-bar-actions>\n		<sw-button variant="primary" :disabled="isLoading" @click="onSave">\n			{{ $tc(\'global.default.save\') }}\n		</sw-button>\n	</template>\n\n	<template #content>\n		<sw-card-view>\n			<sw-card :title="$tc(\'swag-blog.detail.cardGeneral\')">\n				<sw-text-field v-model:value="blog.title" label="Title" :error="blog.errors?.title" required/>\n				<sw-textarea-field v-model:value="blog.description" label="Description" :error="blog.errors?.description"/>\n\n				<sw-text-field v-model:value="blog.author" label="Author" :error="blog.errors?.author" required/>\n\n				<sw-single-select v-model:value="blog.categoryId" label="Category" :error="blog.errors?.categoryId" :options="categoryOptions" display-field="label" value-property="value" placeholder="Select a category"/>\n				<sw-datepicker\n				v-model:value="blog.publishedAt" :label="$tc(\'swag-blog.detail.labelPublishedAt\')" size="medium" required :date-type="isDateTime" :error="blog.errors?.publishedAt"/>\n\n\n				{# {% block sw_blog_detail_logo_upload %}\n																																						<sw-upload-listener :upload-tag="mediaUploadTag" auto-upload @media-upload-finish="setMediaItem"/>\n																																						<sw-media-upload-v2 :default-folder="blogRepository.entityName" :source="blog.mainImageId" :allow-multi-select="false" variant="regular" :upload-tag="mediaUploadTag" :label="$tc(\'sw-blog.detail.labelLogo\')" @sw-media-upload-v2-media-upload-success="setMediaItem" @media-drop="onDropMedia" @media-upload-sidebar-open="openMediaSidebar" @media-upload-remove-image="onUnlinkLogo"/>\n																																\n																																					{% endblock %} #}\n\n				{# {% block sw_blog_detail_logo_upload %}\n						<sw-upload-listener :upload-tag="mediaUploadTag" auto-upload @media-upload-finish="setMediaItem"/>\n						<sw-media-upload-v2 class="sw-blog-detail__logo-upload" :source="blog.mainImageId" :allow-multi-select="false" variant="regular" :upload-tag="mediaUploadTag" :label="$tc(\'sw-blog.detail.labelLogo\')" :default-folder="blogRepository.entityName" @sw-media-upload-v2-media-upload-success="setMediaItem" @media-drop="onDropMedia" @media-upload-remove-image="onUnlinkLogo" @media-upload-sidebar-open="openMediaSidebar"/>\n						<sw-media-sidebar ref="mediaSidebarItem" :upload-tag="mediaUploadTag" @media-selection-change="setMediaItem"></sw-media-sidebar>\n					{% endblock %} #}\n\n					{% block sw_blog_detail_logo_upload %}\n\n						<sw-upload-listener :upload-tag="mediaUploadTag" auto-upload @media-upload-finish="onUploadMedia"/>\n\n						<sw-media-upload-v2 :source="blog.mainImage" :allow-multi-select="false" :upload-tag="mediaUploadTag" :default-folder="blogRepository.entityName" @sw-media-upload-v2-media-upload-success="onUploadMedia" @media-drop="onUploadMedia" @media-upload-sidebar-open="openMediaModal" @media-upload-remove-image="onUnlinkLogo"/>\n\n						<sw-media-modal-v2 v-if="showMediaModal" :allow-multi-select="false" :entity-context="mediaUploadTag" @media-modal-selection-change="onSelectMedia" @media-upload-finish="onUploadMedia" @modal-close="closeMediaModal"/>\n						<sw-media-preview v-if="blog.mainImage" :media="blog.mainImage" :show-toolbar="true">\n							<template #toolbar>\n								<sw-button variant="danger" @click="onUnlinkLogo">Remove</sw-button>\n							</template>\n						</sw-media-preview>\n					{% endblock %}\n\n\n				</sw-card>\n\n\n			</sw-card-view>\n\n\n		</template>\n	</sw-page>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory","acl"],mixins:[i.getByName("notification"),i.getByName("discard-detail-page-changes")("blog")],props:{blogId:{type:String,required:!1,default:null}},data(){return{blog:{title:"",description:"",categoryId:null,mainImageId:null,mainImage:null,errors:{},publishedAt:null},categories:[],isLoading:!1,isSaveSuccessful:!1,showMediaModal:!1}},computed:{identifier(){return this.blog?this.blog.title:""},blogRepository(){return this.repositoryFactory.create("swag_blog")},categoryRepository(){return this.repositoryFactory.create("swag_blog_category")},mediaRepository(){return this.repositoryFactory.create("media")},categoryOptions(){return this.categories.map(e=>({value:e.id,label:e.name}))},mediaUploadTag(){return`sw-blog-detail--${this.blog.id??"new"}`},...d("blog",["title","categoryId"])},watch:{blogId(){this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.loadEntity(),this.loadCategories()},async loadCategories(){let e=new l(1,100);e.addSorting(l.sort("name","ASC")),this.categories=await this.categoryRepository.search(e,t.api)},async loadEntity(){if(this.$route.params.id){this.isLoading=!0;try{let e=await this.blogRepository.get(this.$route.params.id,t.api,criteria);e&&(this.blog={...e,errors:{}})}catch(e){this.createNotificationError({message:"Failed to load blog data."})}finally{this.isLoading=!1}}},openMediaModal(){this.showMediaModal=!0},closeMediaModal(){this.showMediaModal=!1},onSelectMedia(e){if(!e||0===e.length)return;let a=e[0];this.blog.mainImageId=a.id,this.blog.mainImage=a,this.showMediaModal=!1},onUploadMedia({targetId:e,media:a}){this.blog.mainImageId=e,a&&(this.blog.mainImage=a)},onUnlinkLogo(){this.blog.mainImageId=null,this.blog.mainImage=null},onDropMedia(e){this.onUploadMedia({targetId:e.id,media:e})},onSave(){if(!this.blog.title||""===this.blog.title.trim()){this.blog.errors.title="Title must not be empty",this.createNotificationError({message:"Please fill the Title field."});return}this.isLoading=!0,this.blogRepository.save(this.blog,t.api).then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0,this.createNotificationSuccess({message:"Blog updated successfully."})}).catch(()=>{this.createNotificationError({message:"Failed to save blog."})}).finally(()=>{this.isLoading=!1})},onCancel(){this.$router.push({name:"swag.blog.index"})}}}},533:function(e,a,o){var i=o(266);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[e.id,i,""]]),i.locals&&(e.exports=i.locals),(0,o(534).A)("2f0acd63",i,!0,{})}}]);