"use strict";(window["webpackJsonpPluginswag-blog-plugin"]=window["webpackJsonpPluginswag-blog-plugin"]||[]).push([[361],{361:function(t,e,n){n.r(e),n.d(e,{default:function(){return i}});let{Mixin:l,Data:{Criteria:a}}=Shopware;var i={template:'{% block swag_blog_list %}\n	<sw-page\n		class="swag-blog-list">\n\n		{# Search bar #}\n		{% block swag_blog_list_search_bar %}\n			<template #search-bar>\n				<sw-search-bar initial-search-type="blog" :placeholder="$tc(\'swag-blog.list.placeholderSearchBar\')" :initial-search="term" @search="onSearch"/>\n			</template>\n		{% endblock %}\n\n		{# Header #}\n		{% block swag_blog_list_header %}\n			<template #smart-bar-header>\n				<h2>\n					{{ $tc(\'swag-blog.general.mainMenuItemGeneral\') }}\n					<sw-icon name="regular-chevron-right-xs" small/>\n					{{ $tc(\'swag-blog.list.textHeadline\') }}\n\n					<span v-if="!isLoading" class="sw-page__smart-bar-amount">\n						({{ total }})\n					</span>\n				</h2>\n			</template>\n		{% endblock %}\n\n		{# Actions (Add button) #}\n		{% block swag_blog_list_actions %}\n			<template #smart-bar-actions>\n				<sw-button class="swag-blog-list__button-create" :router-link="{ name: \'swag.blog.create\' }" variant="primary">\n					{{ $tc(\'swag-blog.list.buttonAdd\') }}\n				</sw-button>\n			</template>\n		{% endblock %}\n\n		{# Content (Grid) #}\n		{% block swag_blog_list_content %}\n			<template #content>\n				<sw-card-view>\n					<sw-card class="swag-blog-list__card" position-identifier="swag-blog-list">\n						<template #grid>\n							<sw-grid v-show="items.length > 0" class="swag-blog-list-grid" :selectable="false" :items="items" table>\n								<template\n									#columns="{ item }">\n\n									{# Title column #}\n									<sw-grid-column flex="minmax(200px, 2fr)" :label="$tc(\'swag-blog.list.columnTitle\')">\n										<router-link :title="$tc(\'swag-blog.list.contextMenuEdit\')" class="swag-blog-list__column-title" :to="{ name: \'swag.blog.detail\', params: { id: item.id } }">\n											{{ item.title }}\n										</router-link>\n									</sw-grid-column>\n\n									{# Categories column #}\n									<sw-grid-column flex="minmax(150px, 1fr)" :label="$tc(\'swag-blog.list.columnCategories\')">\n										{{ item.category ? item.category.name : \'\' }}\n									</sw-grid-column>\n									{# Author column #}\n									<sw-grid-column flex="minmax(150px, 1fr)" :label="$tc(\'swag-blog.list.columnAuthor\')">\n										{{ item.author }}\n									</sw-grid-column>\n\n									{# Published Date column #}\n									<sw-grid-column flex="minmax(150px, 2fr)" :label="$tc(\'swag-blog.list.columnPublishedAt\')">\n										{{ item?.publishedAt ? (new Date(item.publishedAt)).toLocaleString() : \'\' }}\n									</sw-grid-column>\n\n\n									{# Actions column #}\n									<sw-grid-column flex="minmax(70px, 70px)" align="center" :label="$tc(\'swag-blog.list.columnActions\')">\n										<sw-context-button>\n											<sw-context-menu-item class="swag-blog-list__edit-action" :router-link="{ name: \'swag.blog.detail\', params: { id: item.id } }">\n												{{ $tc(\'swag-blog.list.contextMenuEdit\') }}\n											</sw-context-menu-item>\n\n											<sw-context-menu-item class="swag-blog-list__delete-action" variant="danger" @click="onDeleteBlog(item)">\n												{{ $tc(\'swag-blog.list.buttonDelete\') }}\n											</sw-context-menu-item>\n										</sw-context-button>\n									</sw-grid-column>\n\n									{# Delete modal #}\n									<sw-modal v-if="showModal && deleteEntity?.id === item.id" :title="$tc(\'global.default.warning\')" variant="small" @modal-close="cancelDelete">\n										<p>\n											{{ $tc(\'swag-blog.list.textDeleteConfirm\', 0, { title: item.title }) }}\n										</p>\n\n										<template #modal-footer>\n											<sw-button size="small" @click="cancelDelete">\n												{{ $tc(\'global.default.cancel\') }}\n											</sw-button>\n											<sw-button variant="danger" size="small" @click="confirmDeleteBlog">\n												{{ $tc(\'swag-blog.list.buttonDelete\') }}\n											</sw-button>\n										</template>\n									</sw-modal>\n								</template>\n\n								{# Pagination #}\n								<template #pagination>\n									<sw-pagination :page="page" :limit="limit" :total="total" :total-visible="7" @page-change="onPageChange"/>\n								</template>\n							</sw-grid>\n						</template>\n\n						{# Empty state if no results #}\n						<sw-empty-state v-if="!isLoading && items.length <= 0" :absolute="false" :title="$tc(\'swag-blog.list.messageEmpty\')"/>\n					</sw-card>\n				</sw-card-view>\n			</template>\n		{% endblock %}\n	</sw-page>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,mixins:[l.getByName("sw-settings-list")],data(){return{entityName:"swag_blog",sortBy:"title",showModal:!1,deleteEntity:null}},metaInfo(){return{title:this.$createTitle()}},computed:{titleSaveSuccess(){return this.$tc("global.default.success")},messageSaveSuccess(){return this.deleteEntity?this.$tc("swag-blog.list.messageDeleteSuccess",0,{title:this.deleteEntity.title}):""},listingCriteria(){let t=new a(this.page,this.limit);t.addSorting(a.sort(this.sortBy,this.sortDirection||"ASC"));let e=this.getMainListingParams();return e.term&&t.addFilter(a.contains("title",e.term)),t.addAssociation("category"),t.addAssociation("mainImage"),t.addAssociation("gallery"),t},formatPublishedAt(t){return t?new Date(t).toLocaleString():""},repository(){return this.repositoryFactory.create("swag_blog")}},methods:{onDeleteBlog(t){this.deleteEntity=t,this.showModal=!0},confirmDeleteBlog(){this.deleteEntity?.id&&this.repository.delete(this.deleteEntity.id,Shopware.Context.api).then(()=>{this.showModal=!1,this.deleteEntity=null,this.getList()}).catch(()=>{this.createNotificationError({message:this.$tc("swag-blog.list.messageDeleteError")})})},cancelDelete(){this.showModal=!1,this.deleteEntity=null}}}}}]);