(window["webpackJsonpPluginswag-blog-plugin"]=window["webpackJsonpPluginswag-blog-plugin"]||[]).push([[955],{266:function(){},955:function(e,a,t){"use strict";t.r(a),t.d(a,{default:function(){return r}}),t(533);let{Mixin:o,Data:{Criteria:i},Context:l}=Shopware,{mapPropertyErrors:s}=Shopware.Component.getComponentHelper();var r={template:'{% block swag_blog_detail %}\n<sw-page class="swag-blog-detail">\n\n	<template #smart-bar-header>\n		<h2 v-if="blog && blog.title">\n			{{ blog.title }}\n		</h2>\n		<h2 v-else>\n			{{ $tc(\'swag-blog.detail.titleNew\') }}\n		</h2>\n	</template>\n\n	<template #smart-bar-actions>\n		<sw-button variant="primary" :disabled="isLoading" @click="onSave">\n			{{ $tc(\'global.default.save\') }}\n		</sw-button>\n	</template>\n\n	<template #content>\n		<sw-card-view>\n			<sw-card :title="$tc(\'swag-blog.detail.cardGeneral\')">\n				<sw-text-field v-model:value="blog.title" label="Title" :error="blog.errors?.title" required/>\n				<sw-textarea-field v-model:value="blog.description" label="Description" :error="blog.errors?.description"/>\n\n				<sw-text-field v-model:value="blog.author" label="Author" :error="blog.errors?.author" required/>\n\n				<sw-single-select v-model:value="blog.categoryId" label="Category" :error="blog.errors?.categoryId" :options="categoryOptions" display-field="label" value-property="value" placeholder="Select a category"/>\n				<sw-datepicker v-model:value="blog.publishedAt" :label="$tc(\'swag-blog.detail.labelPublishedAt\')" size="medium" required :date-type="isDateTime" :error="blog.errors?.publishedAt"/>\n\n\n				{# {% block sw_blog_detail_logo_upload %}\n						<sw-upload-listener :upload-tag="mediaUploadTag" auto-upload @media-upload-finish="setMediaItem"/>\n						<sw-media-upload-v2 :default-folder="blogRepository.entityName" :source="blog.mainImageId" :allow-multi-select="false" variant="regular" :upload-tag="mediaUploadTag" :label="$tc(\'sw-blog.detail.labelLogo\')" @sw-media-upload-v2-media-upload-success="setMediaItem" @media-drop="onDropMedia" @media-upload-sidebar-open="openMediaSidebar" @media-upload-remove-image="onUnlinkLogo"/>\n\n					{% endblock %} #}\n\n					{% block sw_blog_detail_logo_upload %}\n						<sw-upload-listener :upload-tag="mediaUploadTag" auto-upload @media-upload-finish="setMediaItem"/>\n						<sw-media-upload-v2 class="sw-blog-detail__logo-upload" :source="blog.mainImageId" :allow-multi-select="false" variant="regular" :upload-tag="mediaUploadTag" :label="$tc(\'sw-blog.detail.labelLogo\')" :default-folder="blogRepository.entityName" @sw-media-upload-v2-media-upload-success="setMediaItem" @media-drop="onDropMedia" @media-upload-remove-image="onUnlinkLogo" @media-upload-sidebar-open="openMediaSidebar"/>\n					{% endblock %}\n\n				</sw-card>\n\n				\n			</sw-card-view>\n\n\n		</template>\n	</sw-page>\n{% endblock %}\n',compatConfig:Shopware.compatConfig,inject:["repositoryFactory","acl"],mixins:[o.getByName("notification"),o.getByName("discard-detail-page-changes")("blog")],props:{blogId:{type:String,required:!1,default:null}},data(){return{blog:{title:"",description:"",categoryId:null,mainImageId:null,mainImage:null,errors:{},publishedAt:null},categories:[],isLoading:!1,isSaveSuccessful:!1}},computed:{identifier(){return this.blog?this.blog.title:""},blogRepository(){return this.repositoryFactory.create("swag_blog")},categoryRepository(){return this.repositoryFactory.create("swag_blog_category")},mediaRepository(){return this.repositoryFactory.create("media")},categoryOptions(){return this.categories.map(e=>({value:e.id,label:e.name}))},mediaUploadTag(){return`sw-blog-detail--${this.blog.id??"new"}`},...s("blog",["title","categoryId"])},watch:{blogId(){this.createdComponent()}},created(){this.createdComponent()},methods:{createdComponent(){this.loadEntity(),this.loadCategories()},async loadCategories(){let e=new i(1,100);e.addSorting(i.sort("name","ASC")),this.categories=await this.categoryRepository.search(e,l.api)},async loadEntity(){this.isLoading=!0;try{this.blog=await this.blogRepository.get(this.$route.params.id,l.api,new i)}catch(e){this.createNotificationError({message:"Failed to load blog data."})}finally{this.isLoading=!1}},openMediaSidebar(){if(!this.$refs.mediaSidebarItem){console.warn("Media sidebar ref not found!");return}this.$refs.mediaSidebarItem.openContent()},setMediaItem({targetId:e,media:a}){this.blog.mainImageId=e,a&&(this.blog.mainImage=a)},onUnlinkLogo(){this.blog.mainImageId=null,this.blog.mainImage=null},onDropMedia(e){this.setMediaItem({targetId:e.id,media:e})},setMediaFromSidebar(e){this.blog.mainImageId=e.id},onSave(){if(!this.blog.title||""===this.blog.title.trim()){this.blog.errors.title="Title must not be empty",this.createNotificationError({message:"Please fill the Title field."});return}this.isLoading=!0,this.blogRepository.save(this.blog,l.api).then(()=>{this.isLoading=!1,this.isSaveSuccessful=!0,this.createNotificationSuccess({message:"Blog updated successfully."})}).catch(()=>{this.createNotificationError({message:"Failed to save blog."})}).finally(()=>{this.isLoading=!1})},onCancel(){this.$router.push({name:"swag.blog.index"})}}}},533:function(e,a,t){var o=t(266);o.__esModule&&(o=o.default),"string"==typeof o&&(o=[[e.id,o,""]]),o.locals&&(e.exports=o.locals),(0,t(534).A)("2f0acd63",o,!0,{})}}]);